ARG PHP_VERSION=8.2
FROM php:$PHP_VERSION-fpm

RUN DEBIAN_FRONTEND=noninteractive \
    && apt-get update && apt-get install -yq --no-install-recommends \
    dialog \
    apt-utils \
    wget \
    curl \
    acl \
    libonig-dev

# package-independent
RUN docker-php-ext-install -j$(nproc) \
    iconv \
    exif \
    bcmath \
    opcache \
    sockets \
    mbstring

# MySQL
RUN docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd && \
    docker-php-ext-install   pdo_mysql

# PostgreSQL
RUN apt-get update && apt-get install -yq --no-install-recommends libpq-dev && \
    docker-php-ext-install pdo_pgsql

# SQLite
RUN apt-get update && apt-get install -yq --no-install-recommends libsqlite3-dev && \
    docker-php-ext-install pdo_sqlite

# intl
RUN apt-get update && apt-get install -yq --no-install-recommends libicu-dev && \
    docker-php-ext-install intl

# xsl
RUN apt-get update && apt-get install -yq --no-install-recommends libxslt-dev && \
    docker-php-ext-install xsl

# zip
RUN apt-get update && apt-get install -yq --no-install-recommends libzip-dev && \
    docker-php-ext-install -j$(nproc) zip

# bz2
RUN apt-get update && apt-get install -yq --no-install-recommends libbz2-dev && \
    docker-php-ext-install -j$(nproc) bz2

# xml, soap
RUN apt-get update && apt-get install -yq --no-install-recommends libxml2-dev && \
    docker-php-ext-install -j$(nproc) xml soap

# Versions: https://xdebug.org/download/historical
ENV XDEBUG_VERSION 3.3.1
RUN pecl install xdebug-$XDEBUG_VERSION && docker-php-ext-enable xdebug

# Composer
ENV COMPOSER_ALLOW_SUPERUSER 1
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer -q

# NodeJS with NPM
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
RUN apt-get install -y nodejs

# Yarn
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list && \
    apt-get update && apt-get install -y yarn

# Symfony
RUN curl -sS https://get.symfony.com/cli/installer | bash && \
    mv /root/.symfony5/bin/symfony /usr/local/bin/symfony && \
    echo 'alias c="php bin/console"' >> /root/.bashrc

# Git
ARG GIT_EMAIL=symfony@example.com
ARG GIT_USER=symfony
RUN apt-get update && apt-get install -y git && \
    git config --global user.email "$GIT_EMAIL" && \
    git config --global user.name "$GIT_USER"

# Midnight Commander
RUN apt-get update && apt-get -y install mc

# Clean
RUN apt-get -y autoremove && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Config PHP
#RUN cp $PHP_INI_DIR/php.ini-development $PHP_INI_DIR/php.ini
COPY ./conf.d $PHP_INI_DIR/conf.d

WORKDIR /app
